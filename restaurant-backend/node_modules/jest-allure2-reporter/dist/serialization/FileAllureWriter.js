"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileAllureWriter = void 0;
const tslib_1 = require("tslib");
const promises_1 = tslib_1.__importDefault(require("node:fs/promises"));
const node_path_1 = tslib_1.__importDefault(require("node:path"));
const properties_1 = require("properties");
async function writeJson(path, data, stringifier) {
    const json = JSON.stringify(data, stringifier);
    await promises_1.default.writeFile(path, json + '\n');
}
function regexpAwareStringifier(_key, value) {
    return value instanceof RegExp ? value.source : value;
}
class FileAllureWriter {
    #config;
    constructor(config) {
        this.#config = config;
    }
    async init() {
        const { resultsDir, overwrite } = this.#config;
        const directoryExists = await promises_1.default.access(resultsDir).then(() => true, () => false);
        if (overwrite && directoryExists) {
            await promises_1.default.rm(resultsDir, { recursive: true });
        }
        await promises_1.default.mkdir(resultsDir, { recursive: true });
    }
    async writeCategories(categories) {
        const path = this.#buildPath('categories.json');
        await writeJson(path, categories, regexpAwareStringifier);
    }
    async writeContainer(result) {
        const path = this.#buildPath(`${result.uuid}-container.json`);
        await writeJson(path, result);
    }
    async writeEnvironmentInfo(info) {
        const text = (0, properties_1.stringify)(info, { unicode: true });
        const path = this.#buildPath('environment.properties');
        await promises_1.default.writeFile(path, text + '\n');
    }
    async writeExecutorInfo(info) {
        const path = this.#buildPath('executor.json');
        await writeJson(path, info);
    }
    async writeResult(result) {
        const path = this.#buildPath(`${result.uuid}-result.json`);
        await writeJson(path, result);
    }
    #buildPath(name) {
        return node_path_1.default.join(this.#config.resultsDir, name);
    }
}
exports.FileAllureWriter = FileAllureWriter;
//# sourceMappingURL=FileAllureWriter.js.map